#!/usr/bin/env python

""" Gets information from tf and publishes odometry topic
"""

__author__ = "Mike Hagenow"

import rospy
import time
from std_msgs.msg import String, Float64
from tf2_msgs.msg import TFMessage
from scipy.spatial.transform import Rotation
import numpy as np
import tf2_ros
from nav_msgs.msg import Odometry

def main():
    rospy.init_node('panda_odom')
    tfBuffer = tf2_ros.Buffer()
    listener = tf2_ros.TransformListener(tfBuffer)
    broadcaster = tf2_ros.StaticTransformBroadcaster()
    odom_pub = rospy.Publisher('/rtabmap/panda/odom', Odometry, queue_size=100)
    rospy.sleep(0.5)

    odom = Odometry()
    odom.header.frame_id = 'panda_link0'
    odom.child_frame_id = 'panda_link0'
    
    rate = rospy.Rate(30.0)
    while not rospy.is_shutdown():
        try:
            trans = tfBuffer.lookup_transform('panda_link0', 'camera_base', rospy.Time())
            odom.header.stamp = rospy.Time.now()
            odom.pose.pose.position.x = trans.transform.translation.x
            odom.pose.pose.position.y = trans.transform.translation.y
            odom.pose.pose.position.z = trans.transform.translation.z
            odom.pose.pose.orientation = trans.transform.rotation
            odom_pub.publish(odom)
            trans.child_frame_id = 'rtabmap/panda/odom'
            broadcaster.sendTransform(trans)
            rate.sleep()

        except (tf2_ros.LookupException, tf2_ros.ConnectivityException, tf2_ros.ExtrapolationException):
            print("failed lookup")
            rate.sleep()
if __name__ == "__main__":
    main()